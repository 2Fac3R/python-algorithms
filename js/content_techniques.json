[
    { "name": "01. Two Pointers", "theory": "./training/techniques/01_two_pointers.md", "cheatsheet": "./cheatsheets/01_two_pointers_cheatsheet.md", "exam": {"path": "./exams/02_exam_two_pointers.md", "solution": "./exams/solutions/02_solution_two_pointers.md"}, "challenges": [{"name": "Valid Palindrome", "path": "./training/challenges/01_a_valid_palindrome.py", "solution": "./training/solutions/01_a_valid_palindrome.py"}, {"name": "Two Sum II", "path": "./training/challenges/01_b_two_sum_sorted.py", "solution": "./training/solutions/01_b_two_sum_sorted.py"}, {"name": "Remove Duplicates", "path": "./training/challenges/01_c_remove_duplicates_sorted.py", "solution": "./training/solutions/01_c_remove_duplicates_sorted.py"}]},
    { "name": "02. Sliding Window", "theory": "./training/techniques/02_sliding_window.md", "cheatsheet": "./cheatsheets/02_sliding_window_cheatsheet.md", "exam": {"path": "./exams/03_exam_sliding_window.md", "solution": "./exams/solutions/03_solution_sliding_window.md"}, "challenges": [{"name": "Max Subarray Sum", "path": "./training/challenges/02_a_max_subarray_sum.py", "solution": "./training/solutions/02_a_max_subarray_sum.py"}, {"name": "Longest Substring", "path": "./training/challenges/02_b_longest_substring_no_repeating.py", "solution": "./training/solutions/02_b_longest_substring_no_repeating.py"}]},
    { "name": "03. Hash Map Patterns", "theory": "./training/techniques/03_hash_map_patterns.md", "cheatsheet": "./cheatsheets/03_hash_tables_cheatsheet.md", "exam": {"path": "./exams/04_exam_hash_tables.md", "solution": "./exams/solutions/04_solution_hash_tables.md"}, "challenges": [{"name": "Two Sum", "path": "./training/challenges/03_a_two_sum.py", "solution": "./training/solutions/03_a_two_sum.py"}, {"name": "Ransom Note", "path": "./training/challenges/03_b_ransom_note.py", "solution": "./training/solutions/03_b_ransom_note.py"}, {"name": "Group Anagrams", "path": "./training/challenges/03_c_group_anagrams.py", "solution": "./training/solutions/03_c_group_anagrams.py"}]},
    { "name": "04. Stacks (LIFO)", "theory": "./training/techniques/04_stacks_lifo.md", "cheatsheet": "./cheatsheets/04_stacks_cheatsheet.md", "exam": {"path": "./exams/05_exam_stacks.md", "solution": "./exams/solutions/05_solution_stacks.md"}, "challenges": [{"name": "Valid Parentheses", "path": "./training/challenges/04_a_valid_parentheses.py", "solution": "./training/solutions/04_a_valid_parentheses.py"}, {"name": "Min Stack", "path": "./training/challenges/04_b_min_stack.py", "solution": "./training/solutions/04_b_min_stack.py"}]},
    { "name": "05. Linked List Manipulation", "theory": "./training/techniques/05_linked_list_manipulation.md", "cheatsheet": "./cheatsheets/05_linked_list_manipulation.md", "exam": {"path": "./exams/06_exam_linked_lists.md", "solution": "./exams/solutions/06_solution_linked_lists.md"}, "challenges": [{"name": "Reverse List", "path": "./training/challenges/05_c_reverse_linked_list.py", "solution": "./training/solutions/05_c_reverse_linked_list.py"}, {"name": "Merge Lists", "path": "./training/challenges/05_d_merge_two_sorted_lists.py", "solution": "./training/solutions/05_d_merge_two_sorted_lists.py"}, {"name": "List Cycle", "path": "./training/challenges/05_e_linked_list_cycle.py", "solution": "./training/solutions/05_e_linked_list_cycle.py"}]},
    { "name": "06. Queues & BFS", "theory": "./training/techniques/05_queues_bfs.md", "cheatsheet": "./cheatsheets/05_queues_cheatsheet.md", "exam": {"path": "./exams/06_exam_queues.md", "solution": "./exams/solutions/06_solution_queues.md"}, "challenges": [{"name": "Recent Calls", "path": "./training/challenges/05_a_number_of_recent_calls.py", "solution": "./training/solutions/05_a_number_of_recent_calls.py"}]},
    { "name": "07. Binary Search", "theory": "./training/techniques/07_binary_search.md", "cheatsheet": "./cheatsheets/06_binary_search_cheatsheet.md", "exam": {"path": "./exams/07_exam_binary_search.md", "solution": "./exams/solutions/07_solution_binary_search.md"}, "challenges": [{"name": "Binary Search", "path": "./training/challenges/06_a_binary_search.py", "solution": "./training/solutions/06_a_binary_search.py"}, {"name": "Search Insert Position", "path": "./training/challenges/06_b_search_insert_position.py", "solution": "./training/solutions/06_b_search_insert_position.py"}]},
    { "name": "08. Recursion / Tree DFS", "theory": "./training/techniques/08_recursion_tree_dfs.md", "cheatsheet": "./cheatsheets/08_trees_cheatsheet.md", "exam": {"path": "./exams/09_exam_trees.md", "solution": "./exams/solutions/09_solution_trees.md"}, "challenges": [{"name": "Max Depth", "path": "./training/challenges/08_a_max_depth_binary_tree.py", "solution": "./training/solutions/08_a_max_depth_binary_tree.py"}, {"name": "Validate BST", "path": "./training/challenges/08_b_validate_bst.py", "solution": "./training/solutions/08_b_validate_bst.py"}, {"name": "Level Order Traversal", "path": "./training/challenges/08_c_level_order_traversal.py", "solution": "./training/solutions/08_c_level_order_traversal.py"}]},
    { "name": "09. Graph Traversal", "theory": "./training/techniques/09_graph_traversal.md", "cheatsheet": "./cheatsheets/10_graphs_cheatsheet.md", "exam": {"path": "./exams/11_exam_graphs.md", "solution": "./exams/solutions/11_solution_graphs.md"}, "challenges": [{"name": "Number of Islands", "path": "./training/challenges/10_a_number_of_islands.py", "solution": "./training/solutions/10_a_number_of_islands.py"}, {"name": "Find if Path Exists", "path": "./training/challenges/10_b_find_if_path_exists.py", "solution": "./training/solutions/10_b_find_if_path_exists.py"}]},
    { "name": "10. Divide and Conquer", "theory": "./training/techniques/10_divide_and_conquer.md", "cheatsheet": "./cheatsheets/10_divide_and_conquer.md", "exam": {"path": "./exams/11_exam_divide_and_conquer.md", "solution": "./exams/solutions/11_solution_divide_and_conquer.md"}, "challenges": [{"name": "Merge Sort", "path": "./training/challenges/10_c_merge_sort.py", "solution": "./training/solutions/10_c_merge_sort.py"}]},
    { "name": "11. Heaps / Priority Queues", "theory": "./training/techniques/11_heaps_priority_queues.md", "cheatsheet": "./cheatsheets/09_heaps_cheatsheet.md", "exam": {"path": "./exams/10_exam_heaps.md", "solution": "./exams/solutions/10_solution_heaps.md"}, "challenges": [{"name": "Kth Largest Element", "path": "./training/challenges/09_a_kth_largest_element.py", "solution": "./training/solutions/09_a_kth_largest_element.py"}, {"name": "Last Stone Weight", "path": "./training/challenges/09_b_last_stone_weight.py", "solution": "./training/solutions/09_b_last_stone_weight.py"}]},
    { "name": "12. Backtracking", "theory": "./training/techniques/10_backtracking.md", "cheatsheet": "./cheatsheets/11_backtracking_cheatsheet.md", "exam": {"path": "./exams/12_exam_backtracking.md", "solution": "./exams/solutions/12_solution_backtracking.md"}, "challenges": [{"name": "Subsets", "path": "./training/challenges/11_a_subsets.py", "solution": "./training/solutions/11_a_subsets.py"}, {"name": "Generate Parentheses", "path": "./training/challenges/11_b_generate_parentheses.py", "solution": "./training/solutions/11_b_generate_parentheses.py"}]},
    { "name": "13. Intervals", "theory": "./training/techniques/13_intervals.md", "cheatsheet": "./cheatsheets/13_intervals_cheatsheet.md", "exam": {"path": "./exams/14_exam_intervals.md", "solution": "./exams/solutions/14_solution_intervals.md"}, "challenges": [{"name": "Merge Intervals", "path": "./training/challenges/13_a_merge_intervals.py", "solution": "./training/solutions/13_a_merge_intervals.py"}, {"name": "Insert Interval", "path": "./training/challenges/13_b_insert_interval.py", "solution": "./training/solutions/13_b_insert_interval.py"}]},
    { "name": "14. Tries", "theory": "./training/techniques/14_tries.md", "cheatsheet": "./cheatsheets/14_tries_cheatsheet.md", "exam": {"path": "./exams/15_exam_tries.md", "solution": "./exams/solutions/15_solution_tries.md"}, "challenges": [{"name": "Implement Trie", "path": "./training/challenges/14_a_implement_trie.py", "solution": "./training/solutions/14_a_implement_trie.py"}]},
    { "name": "15. Advanced Graphs", "theory": "./training/techniques/15_advanced_graphs.md", "cheatsheet": "./cheatsheets/15_advanced_graphs.md", "exam": {"path": "./exams/17_exam_advanced_graphs.md", "solution": "./exams/solutions/17_solution_advanced_graphs.md"}, "challenges": [{"name": "Course Schedule", "path": "./training/challenges/15_a_course_schedule.py", "solution": "./training/solutions/15_a_course_schedule.py"}, {"name": "Network Delay Time", "path": "./training/challenges/15_b_network_delay_time.py", "solution": "./training/solutions/15_b_network_delay_time.py"}]},
    { "name": "16. Dynamic Programming", "theory": "./training/techniques/15_dynamic_programming.md", "cheatsheet": "./cheatsheets/12_dynamic_programming_cheatsheet.md", "exam": {"path": "./exams/13_exam_dp.md", "solution": "./exams/solutions/13_solution_dp.md"}, "challenges": [{"name": "Climbing Stairs", "path": "./training/challenges/12_a_climbing_stairs.py", "solution": "./training/solutions/12_a_climbing_stairs.py"}, {"name": "Coin Change", "path": "./training/challenges/12_b_coin_change.py", "solution": "./training/solutions/12_b_coin_change.py"}]},
    { "name": "17. Bit Manipulation", "theory": "./training/techniques/16_bit_manipulation.md", "cheatsheet": "./cheatsheets/16_bit_manipulation.md", "exam": {"path": "./exams/16_exam_bit_manipulation.md", "solution": "./exams/solutions/16_solution_bit_manipulation.md"}, "challenges": [{"name": "Single Number", "path": "./training/challenges/16_a_single_number.py", "solution": "./training/solutions/16_a_single_number.py"}, {"name": "Number of 1 Bits", "path": "./training/challenges/16_b_number_of_1_bits.py", "solution": "./training/solutions/16_b_number_of_1_bits.py"}, {"name": "Counting Bits", "path": "./training/challenges/16_c_counting_bits.py", "solution": "./training/solutions/16_c_counting_bits.py"}]}
]